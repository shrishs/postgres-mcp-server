apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: mcp.postgres
  title: MCP Postgres Tools
  description: Tools exposed by the Postgres MCP server (e.g., query, listTables).
  tags: [mcp, postgres, database]
  links:
    - url: http://localhost:3001/mcp
      title: MCP API Endpoint
      icon: api
spec:
  type: mcp
  lifecycle: production
  owner: group:platform
  definition: |
    tools:
      - name: query
        summary: Execute SQL (read-only)
        input:
          - name: sql
            type: string
    resources:
      - name: database://tables
        summary: List database tables      
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: local-postgres
  title: Local Postgres (Podman)
  description: Postgres instance running in Podman on developer workstation.
  tags: [postgres, podman, database]
spec:
  type: database
  owner: group:platform
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: postgres-mcp-server
  description: MCP server exposing PostgreSQL via the Model Context Protocol.
  tags: [mcp, postgres, database]
  annotations:
    mcp.server.url: http://localhost:3001/mcp     # change to your actual endpoint
    mcp.server.transport: http                        # or http / ws
    mcp.auth.type: bearer                            # or none/basic
    mcp.auth.tokenEnv: MCP_TOKEN                     # env var name your clients should use  
    github.com/project-slug: shrishs/postgres-mcp-server
    backstage.io/source-location: url:https://github.com/shrishs/postgres-mcp-server/blob/main/catalog-info.yaml
    backstage.io/techdocs-ref: dir:.
  links:
    - url: http://localhost:3001/mcp
      title: MCP Endpoint
      icon: api
    - url: http://localhost:3001/health
      title: Health Check
      icon: monitor
    - url: https://github.com/shrishs/postgres-mcp-server
      title: Repository
      icon: github
    - url: https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres
      title: Upstream reference
      icon: docs
spec:
  type: mcp-server
  lifecycle: production
  owner: group:platform-ai           # change to a real owner entity in your RHDH if needed (e.g., group:platform)
  system: mcp-integration          # optional; include only if you also register the System below
  providesApis:
    - api:default/mcp.postgres               # <-- shows “Provides” in relations tab
  dependsOn:
    - resource:default/local-postgres        # <-- shows dependency on the DB resource
